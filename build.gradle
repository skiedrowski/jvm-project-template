plugins {
	id "org.sonarqube" version "2.2.1"
}
//TODO setup: add project description
description = """describe project"""

def buildscriptDir = "$rootProject.projectDir/buildscripts"

apply from: "$buildscriptDir/loadEnvironment.gradle"
apply from: "$buildscriptDir/printGradleInfo.gradle"
apply from: "$buildscriptDir/loadVersions.gradle"

apply from: "$buildscriptDir/sonarqube.gradle"
apply from: "$buildscriptDir/jacocoMultimodule.gradle"
//apply from: "$buildscriptDir/jacocoSingleModule.gradle"
subprojects {
	apply plugin: 'java'

	version = '0.1-SNAPSHOT'
	group = "com.example.mygid" // or "com.example.${rootProject.name}"

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	dependencies {
		testCompile "junit:junit-dep:$ver.junit"
		testCompile "org.hamcrest:hamcrest-core:$ver.hamcrest"
		testCompile "org.hamcrest:hamcrest-library:$ver.hamcrest"
		testCompile("org.mockito:mockito-core:$ver.mockito") {
			exclude group: "org.hamcrest"
		}
	}
	
	apply from: "$buildscriptDir/sourcesJar.gradle"
	apply from: "$buildscriptDir/testJar.gradle"
	apply from: "$buildscriptDir/javadocJar.gradle"
	
	test.maxParallelForks = Runtime.runtime.availableProcessors()

	//apply from: "$buildscriptDir/execSequentialTestsSeparately.gradle"

	apply from: "$buildscriptDir/logAllTests.gradle"
	apply from: "$buildscriptDir/ignoreTestFailuresIfConfiguredInEnv.gradle"

	apply from: "$buildscriptDir/mavenPublish.gradle"
}
apply from: "$buildscriptDir/fixJenkins.gradle"
apply from: "$buildscriptDir/wrapper.gradle"
